package com.winway.wwapp2;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.ArrayList;import org.apache.http.HttpResponse;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.DefaultHttpClient;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.app.ActionBar;import android.app.Activity;import android.app.Fragment;import android.app.FragmentManager;import android.content.Context;import android.content.res.TypedArray;import android.graphics.Color;import android.os.AsyncTask;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;public class NavbarAnnounceActivity extends BaseFragment{	private Context context ;	private Button btnMsg;	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 				return initView(inflater, container);	}	private View initView(LayoutInflater inflater, ViewGroup container) {				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 				View view = inflater.inflate(R.layout.actnavbarannounce, container, false); 		context = view.getContext();		showActionbar();		setTitle("Announce");		  this.btnMsg = ((Button)view.findViewById(R.id.btnMsg));		    queryData(super.getWebServiceUrl() + "GetMSGUnreadCount?USERID=" + super.getLoginUser() + "&WWID=13145774WWGlobal999988msg", new IDataReceiveListener(){		    	@Override		    	public void onReceiveData(Object result)		    	  {		    		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		    		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 		    				    				    	    	try		    	    		{		    	    			int cc = Integer.parseInt(new JSONObject((String)result).getString("GetMSGUnreadCountResult"));		    	    			initBadge(btnMsg,cc);		    	    		}		    	    	catch (JSONException e)		    	    			{		    	     		    	        e.printStackTrace();		    	    			}		    	  }		    });				return view;	}	 private void initBadge(Button button, int count)	  {		 		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 							    if (button != null)	    {	    	if(count>0){	    		   BadgeView badge1 = new BadgeView(this.getActivity(), button);// 創建一個BadgeView物件，view為你需要顯示提醒的控制項	    			badge1.setText(Integer.toString(count)); // 需要顯示的提醒類容	    			badge1.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);// 顯示的位置.右上角,BadgeView.POSITION_BOTTOM_LEFT,下左，還有其他幾個屬性	    			badge1.setTextColor(Color.WHITE); // 文本顏色	    			badge1.setBadgeBackgroundColor(Color.GRAY); //提醒資訊的背景顏色，自己設置	    			badge1.setTextSize(18); // 文本大小	    			badge1.setBadgeMargin(60, 5); // 水準和豎直方向的間距	    			//badge1.setBadgeMargin(30); //各邊間隔	    			// badge1.toggle(); //顯示效果，如果已經顯示，則隱藏，如果隱藏，則顯示	    			badge1.show();// 只有顯示	    	}	    }	  }	 public void queryData(String url, IDataReceiveListener DataReceiveListener)	  {		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 							    super.getRequest(url, DataReceiveListener);	  }	public void showActionbar()	{		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 					    ActionBar mActionBar=getActivity().getActionBar();        if(mActionBar.isShowing()==false)mActionBar.show();	}	/*public void home_message_click(View view)	{		Fragment fragment = null;		fragment = new NavbarMessageActivity();	    FragmentManager fragmentManager = getFragmentManager();	    fragmentManager.beginTransaction().replace(R.id.content_frame, fragment).commit();			}	public void  home_favorite_click(View view)	{		Fragment fragment = null;		fragment = new NavbarFavoriteActivity();	    FragmentManager fragmentManager = getFragmentManager();	    fragmentManager.beginTransaction().replace(R.id.content_frame, fragment).commit();			}*/	public void setTitle(CharSequence title) {				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 		getActivity().getActionBar().setTitle(title);		Button btnAdd  =(Button)getActivity().findViewById(R.id.btn_favorite_add);		if(btnAdd.getVisibility()== View.VISIBLE)		{			btnAdd.setVisibility(View.GONE);		}		Button btnSearch  =(Button)getActivity().findViewById(R.id.btn_search);		if(btnSearch.getVisibility()== View.VISIBLE)		{			btnSearch.setVisibility(View.GONE);		}    }	@Override	public void onDestroyView() {		super.onDestroyView();	}	@Override	public void onDestroy() {		super.onDestroy();	}	@Override	public void onDetach() {		super.onDetach();	}	@Override	public void onPause() {		super.onPause();	}	@Override	public void onResume() {		super.onResume();		setTitle("Announce");	}	@Override	public void onStart() {		super.onStart();	}	@Override	public void onStop() {		super.onStop();	}	@Override	public void onAttach(Activity activity) {		super.onAttach(activity);	}}