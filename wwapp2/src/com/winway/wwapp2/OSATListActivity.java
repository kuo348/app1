package com.winway.wwapp2;import java.util.ArrayList;import java.util.List;import java.util.Map;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import com.winway.wwapp2.PullDownView.OnPullDownListener;import android.app.Fragment;import android.app.FragmentManager;import android.content.Context;import android.content.res.TypedArray;import android.graphics.drawable.ColorDrawable;import android.os.Bundle;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.view.View.OnFocusChangeListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.inputmethod.InputMethodManager;import android.widget.AdapterView;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ImageView;import android.widget.ListView;import android.widget.RelativeLayout;import android.widget.TableLayout;import android.widget.AdapterView.OnItemClickListener;public class OSATListActivity extends BaseFragment implements OnPullDownListener, OnItemClickListener {	private Context context ;	private Bundle bundle;	private View mView=null;	private int ACTION_MESSAGE;	private OSATListAdapter adapter2;	private ArrayList<OSATItem> osatItems;	private PullDownView mPullDownView;    private List<Map<String,String>> mStrings = new ArrayList<Map<String,String>>();	protected static final int REFRESH_DATA = 0x00000002;	private static final int WHAT_DID_LOAD_DATA = 0;	private static final int WHAT_DID_REFRESH = 1;	private static final int WHAT_DID_MORE = 5;	private Button btnCancel=null;	private Button btnCancel2=null;	private String strSearchText="";	private EditText searchEdit;	private int page=1;	private ListView lstOSAT;		private RelativeLayout r1,r2;		@Override		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {			return initView(inflater, container);		}		private View initView(LayoutInflater inflater, ViewGroup container) {			View view = inflater.inflate(R.layout.actosatlist, container, false);			context = view.getContext();			bundle =this.getArguments();			btnCancel=(Button) view.findViewById(R.id.btn_cancel);			if(btnCancel!=null){				btnCancel.setOnClickListener(new OnClickListener() {			         public void onClick(View v) {                        closeFragment();				        }				    });							}			btnCancel2=(Button)view.findViewById(R.id.btn_osat_cancel);			r1=(RelativeLayout)view.findViewById(R.id.osat_r1);			r2=(RelativeLayout)view.findViewById(R.id.osat_r2);			searchEdit=(EditText)view.findViewById(R.id.osat_search_text);			btnCancel2.setOnClickListener(new View.OnClickListener(){				@Override				public void onClick(View v){										//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());					//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 			   							if(r1.getVisibility()!=View.VISIBLE)					{						r1.setVisibility(View.VISIBLE);										}					if(btnCancel2.getVisibility()==View.VISIBLE)					{						btnCancel2.setVisibility(View.GONE);						//searchEdit.setFocusable(false);						//searchEdit.setFocusableInTouchMode(false);						//searchEdit.setClickable(false);					}				}			});			searchEdit.setOnClickListener(new View.OnClickListener(){				@Override				public void onClick(View v){			   							if(btnCancel2.getVisibility()!=View.VISIBLE)					{						btnCancel2.setVisibility(View.VISIBLE);						}					if(r1.getVisibility()==View.VISIBLE)					{						r1.setVisibility(View.GONE);										}				}			});			searchEdit.setOnTouchListener(new OnTouchListener() {			    @Override			    public boolean onTouch(View v, MotionEvent event) {                   if (event.getAction() == MotionEvent.ACTION_UP) {			            			        }			        return false;			    }			});			searchEdit.setOnFocusChangeListener(new OnFocusChangeListener() {			    @Override			    public void onFocusChange(View v, boolean hasFocus) {			        if (hasFocus) {			        	if(btnCancel2.getVisibility()!=View.VISIBLE)						{							btnCancel2.setVisibility(View.VISIBLE);							}						if(r1.getVisibility()==View.VISIBLE)						{							r1.setVisibility(View.GONE);											}			        } else {			           			        }			    }			});				searchEdit.setOnKeyListener(new OnKeyListener() {			    public boolean onKey(View v, int keyCode, KeyEvent event) {			    	if ((event.getAction() == MotionEvent.ACTION_UP) && (keyCode== 66))					{			          // Perform action on key press			        	page=1;				        strSearchText=searchEdit.getText().toString();				    	queryData(WHAT_DID_LOAD_DATA);			        			        }			        return false;			    }			});			initPullDownView(view);			queryData(WHAT_DID_LOAD_DATA);			return view;		}	   private void queryData(int Message)		{             if(bundle.size()==0||bundle.getString("XD003")==null)             {            	 return ;             }			 String json="";					   //  String url="http://59.125.146.7:8080/APQPService/GetMsgList?USERID=mis&PAGE="+Integer.toString(page)+"&WWID=13145774WWGlobal999988msg";				 String url="http://59.125.146.7:8080/APQPService/openWindow1OSAT";			     JSONObject jsonObject = new JSONObject();			     JSONObject data=new JSONObject();		         try {		        	   data.accumulate("condition", strSearchText);		        	   data.accumulate("XD003", bundle.getString("XD003"));					   jsonObject.accumulate("userid",this.getLoginUser());					   jsonObject.accumulate("WWID", "13145774WWGlobal999988owquery999");					   jsonObject.accumulate("data", data);					   jsonObject.accumulate("page",page);					   super.postRequest(url,jsonObject,Message);					   				} catch (JSONException e) {					// TODO Auto-generated catch block					e.printStackTrace();				}					}						@Override		  public void loadData(Object result)		  {					try {				JSONObject jsonObject=new JSONObject((String)result);				osatItems.clear();				setOSATItems(jsonObject);				mPullDownView.notifyDidLoad();				}			catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}				  		  }		@Override		  public void loadRefreshData(Object result)		  {			try {				JSONObject jsonObject=new JSONObject((String)result);				osatItems.clear();				setOSATItems(jsonObject);				page=1;				mPullDownView.notifyDidRefresh();				}			catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}				  		  }			@Override		  public void loadMoreData(Object result)		  {				try {					JSONObject jsonObject=new JSONObject((String)result);					setOSATItems(jsonObject);					JSONArray array=jsonObject.getJSONArray("data");					if(array.length()==0){						page=page-1;							}					mPullDownView.notifyDidMore();					}				catch (JSONException e) {					// TODO Auto-generated catch block					e.printStackTrace();				}				  		  }		private void setOSATItems(JSONObject jsonObject)		{						try {				JSONArray array=jsonObject.getJSONArray("data");				if(array.length()>0){				for(int i=0;i<array.length() ;i++){					JSONObject obj;					obj = array.getJSONObject(i);						osatItems.add(new OSATItem(obj.getString("XD006"),obj.getString("XD005")));	    		      }				adapter2.notifyDataSetChanged();				}			   } catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}					}		  @Override			public void onRefresh() {				// TODO Auto-generated method stub		new Thread(new Runnable() {					@Override					public void run() {						//String result="";										queryData(WHAT_DID_REFRESH);    											}				}).start();			}			@Override			public void onMore() {	// TODO Auto-generated method stub		new Thread(new Runnable() {							@Override					public void run() {							//String result="";						page+=1;						queryData(WHAT_DID_MORE);    					}				}).start();							}			private void initPullDownView(View view)			{				/*				 * 1.使用PullDownView				 * 2.設置OnPullDownListener				 * 3.從mPullDownView里面獲取ListView				 */							mPullDownView = (PullDownView) view.findViewById(R.id.osatlistview);				if(mPullDownView==null) return ;				mPullDownView.setOnPullDownListener(this);				lstOSAT = mPullDownView.getListView();						lstOSAT.setOnItemClickListener(this);				lstOSAT.setDividerHeight(0);				lstOSAT.setHeaderDividersEnabled(true);				 osatItems = new ArrayList<OSATItem>();				 adapter2 = new OSATListAdapter(context,osatItems);				 lstOSAT.setAdapter(adapter2);			     mPullDownView.enableAutoFetchMore(true, 1);							}			@Override			public void onItemClick(AdapterView<?> parent, View view, int position,					long id) {				   final OSATItem item = (OSATItem ) osatItems.get(position);			       doWork(item);				   closeFragment();				}			private void closeFragment()			{				if(this.fragmentManager==null){					this.fragmentManager=getFragmentManager();				}				 this.fragmentManager.beginTransaction().remove(this).commit();				 if(parent!=null){					 this.fragmentManager.beginTransaction().show(parent).commit();				 }							}}