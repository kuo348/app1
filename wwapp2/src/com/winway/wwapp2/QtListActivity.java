package com.winway.wwapp2;import android.app.ActionBar;import android.app.Fragment;import android.app.FragmentManager;import android.content.Context;import android.content.res.TypedArray;import android.graphics.drawable.ColorDrawable;import android.os.Bundle;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.View.OnFocusChangeListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.ViewGroup;import android.view.inputmethod.EditorInfo;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RelativeLayout;import android.widget.TextView;import com.winway.wwapp2.PullDownView.OnPullDownListener;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Set;/** * qt列表的Fragment *  * @author *  */public class QtListActivity extends BaseFragment implements		OnPullDownListener, OnItemClickListener {	private ListView lstQt;	// private SimpleAdapter adapter2;	private QtListAdapter adapter2;	private TypedArray navMenuIcons;	private TypedArray navMenuIcons2;	private ArrayList<QtItem> qtItems;	private Context context;	private PullDownView mPullDownView;	private List<Map<String, String>> mStrings = new ArrayList<Map<String, String>>();	protected static final int REFRESH_DATA = 0x00000002;	private static final int WHAT_DID_LOAD_DATA = 0;	private static final int WHAT_DID_REFRESH = 1;	private static final int WHAT_DID_MORE = 5;	private int ACTION_MESSAGE;	private int page = 1;	private Bundle bundle;    private Bundle bundle_adv;	private EditText editSearch;	private Button btnAdvSearch;	private Button btnCancel;	private Button btnBasicSearch;    private Button btnAddQt;	private String strSearchText = "";	private RelativeLayout r1;	private RelativeLayout r2;	private RelativeLayout r3;	private RadioGroup radioGroup;	private RadioButton tabQt;	private RadioButton tabCust;    private String sTmp="";	// C	private void closeFragment() {		if (this.parent != null) {			this.fragmentManager.beginTransaction().remove(this).commit();			this.fragmentManager.beginTransaction().show(this.parent).commit();		}	}	//	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		return initView(inflater, container);	}	/**	 * 初始化QT列表 Screenshot_20150410_13.jpg	 * 	 * @param inflater	 * @param container	 * @return	 */	private View initView(LayoutInflater inflater, ViewGroup container) {		View view = inflater.inflate(R.layout.actqtlist, container, false);		context = view.getContext();		// View view2 = inflater.inflate(R.layout.pulldown, container, false);		initPullDownView(view);		initUI(view);		ACTION_MESSAGE = WHAT_DID_LOAD_DATA;		page = 1;		if (this.getArguments() != null) {			bundle = this.getArguments();		}		if (qtItems.size() == 0 && bundle == null) {			bundle = new Bundle();		}		queryData(WHAT_DID_LOAD_DATA);		return view;	}	/**	 * 顯示Qt進階查詢視窗	 */	public void showAdvDialog() {        //----------------------------        //20151227 : 新寫法		QtAdvSearchActivity activity = new QtAdvSearchActivity();		activity.parent = this;		activity.setCallback(new BaseFragment.ICallback() {			@Override			public void doWork(Object object) {                bundle_adv = (Bundle) object;                //這 4 行移到 Loaddata                page = 1;               // qtItems.clear();               // adapter2.notifyDataSetChanged();               // mPullDownView.notifyDidLoad();                queryData(WHAT_DID_LOAD_DATA);                //bundle_adv.clear();                				//((EditText) view).setText(b.getString("custId") + " "				//		+ b.getString("custName"));				//((EditText) view).setHint(b.getString("custId"));			}		});		FragmentManager fragmentManager = getFragmentManager();		fragmentManager.beginTransaction().hide(fragmentManager.findFragmentById(this.getId())).commit();		fragmentManager.beginTransaction().add(R.id.content_frame, activity, "act_qt_adv_search").commit();		fragmentManager.beginTransaction().addToBackStack(null);		fragmentManager.beginTransaction().show(activity).commit();		        //----------------------------		/*		QtAdvSearchActivity activity = new QtAdvSearchActivity();		activity.setParent(this);		FragmentManager fragmentManager = getFragmentManager();		Fragment fragment = (Fragment) activity;		fragment.setRetainInstance(true);		if (fragmentManager.findFragmentById(fragment.getId()) == null) {			fragmentManager.beginTransaction()					.add(R.id.content_frame, fragment, "act_qt_adv_search")					.commit();		}		fragmentManager.beginTransaction().hide(this).commit();		fragmentManager.beginTransaction().show(fragment).commit();        */	}	private void initUI(View view) {		final Button btnReturnSale = (Button) view.findViewById(R.id.btnReturnSale);		if (btnReturnSale != null) {			if (this.getArguments() != null) {				btnReturnSale.setText("Back");			}			btnReturnSale.setOnClickListener(new OnClickListener() {				@Override				public void onClick(View v) {					if (btnReturnSale.getText().equals("Back")) {						closeFragment();					} else {						((MainActivity) getActivity()).returnSale(v);					}				}			});		}		this.editSearch = ((EditText) view.findViewById(R.id.search_text));		this.r1 = ((RelativeLayout) view.findViewById(R.id.cust_r1));		this.r2 = ((RelativeLayout) view.findViewById(R.id.cust_r2));		this.r3 = ((RelativeLayout) view.findViewById(R.id.cust_r3));		this.radioGroup = (RadioGroup) view.findViewById(R.id.radiogroup1);		this.btnAdvSearch = (Button) view.findViewById(R.id.btn_adv_search);		this.btnAdvSearch.setOnClickListener(		    new OnClickListener() {			    @Override			    public void onClick(View v) {                    //2015                    editSearch.setText("");                    showAdvDialog();// 顯示Qt進階查詢視窗			    }		    }		);        //20150105 : 注意:此段改用 edit Search . set On Editor ActionListener//		this.btnBasicSearch = (Button) view.findViewById(R.id.btn_basic_search);//		this.btnBasicSearch.setOnClickListener(////				new OnClickListener() {////					@Override//					public void onClick(View v) {////                        //strSearchText = "queryValue:" + editSearch.getText().toString().trim();//						strSearchText = editSearch.getText().toString().trim();//                        //20160102 : 解除 adv search mode//                        if (bundle_adv != null && bundle_adv.size() != 0) {//                            bundle_adv.clear();//解除 adv search mode//                        }////                        bundle.clear();//                        page = 1;//                        ACTION_MESSAGE = WHAT_DID_LOAD_DATA;//                        qtItems.clear();//                        queryData(ACTION_MESSAGE);////					}//				}//		);		this.btnCancel = (Button) view.findViewById(R.id.btn_cancel);        this.btnAddQt = (Button) view.findViewById(R.id.btnAddQt);		this.tabQt = (RadioButton) view.findViewById(R.id.tabQt);		this.tabCust = (RadioButton) view.findViewById(R.id.tabCust);		tabQt.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				tabQt.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.red));				tabCust.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.white));			}		});		tabCust.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				tabQt.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.white));				tabCust.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.red));			}		});		btnCancel.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				strSearchText = "";				if (btnAdvSearch.getVisibility() != View.VISIBLE) {					btnAdvSearch.setVisibility(View.VISIBLE);				}				if (btnCancel.getVisibility() == View.VISIBLE) {					btnCancel.setVisibility(View.GONE);				}				if (r3.getVisibility() == View.VISIBLE) {					r3.setVisibility(View.GONE);				}				if (r1.getVisibility() != View.VISIBLE) {					r1.setVisibility(View.VISIBLE);				}			}		});        btnAddQt.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                createQT(v);                //Create            }        });        this.editSearch.setOnEditorActionListener(				new TextView.OnEditorActionListener()				{					@Override					public boolean onEditorAction(TextView v, int actionId,KeyEvent event)					{						//showDialog("1");						if(actionId== EditorInfo.IME_ACTION_SEARCH) {							//showDialog("2");							//strSearchText = "queryValue:" + editSearch.getText().toString().trim();							strSearchText = editSearch.getText().toString().trim();							//20160102 : 解除 adv search mode							if (bundle_adv != null && bundle_adv.size() != 0) {								bundle_adv.clear();//解除 adv search mode							}							bundle.clear();							page = 1;							//qtItems.clear();							//adapter2.notifyDataSetChanged();							//mPullDownView.notifyDidLoad();							queryData(WHAT_DID_LOAD_DATA);						}						return false;					}				});//        //20160102 : 新增 basic search button, 本段 remark//		editSearch.clearFocus();//		// set Search Edit On Click Event//		this.editSearch.setOnClickListener(new OnClickListener() {//			@Override//			public void onClick(View view) {////				// ((MainActivity)getActivity()).hideActionbar();//			}//		});//		// set Search Edit OnTouch Event//		this.editSearch.setOnTouchListener(new OnTouchListener() {//			@Override//			public boolean onTouch(View view, MotionEvent event) {////				// editSearch.setInputType(InputType.TYPE_NULL); // 關閉軟鍵盤//				return false;//			}//		});//		// set Search Edit Focus Event//		this.editSearch.setOnFocusChangeListener(new OnFocusChangeListener() {//			@Override//			public void onFocusChange(View v, boolean hasFocus) {////				if (hasFocus) {//					// InputMethodManager imm = (InputMethodManager)//					// getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);//					// imm.hideSoftInputFromWindow(editSearch.getWindowToken(),//					// 0);//					// ((MainActivity)getActivity()).hideActionbar();//					if (btnAdvSearch.getVisibility() == View.VISIBLE) {//						btnAdvSearch.setVisibility(View.GONE);//					}//					if (btnCancel.getVisibility() != View.VISIBLE) {//						btnCancel.setVisibility(View.VISIBLE);//					}//					if (r3.getVisibility() != View.VISIBLE) {//						r3.setVisibility(View.VISIBLE);//					}//					if (r1.getVisibility() == View.VISIBLE) {//						r1.setVisibility(View.GONE);//					}//				}//			}////		});////			this.editSearch.setOnKeyListener(new OnKeyListener() {//			@Override//			public boolean onKey(View view, int args, KeyEvent keyEvent) {///*//				if ((keyEvent.getAction() == 0) && (args == 66)) {//					int rid = radioGroup.getCheckedRadioButtonId();//					if (rid == R.id.tabQt) {//						strSearchText = "qtno:"	+ editSearch.getText().toString();//						//strSearchText = "queryValue:" + editSearch.getText().toString();//					} else {//						strSearchText = "customer:"	+ editSearch.getText().toString();//						//strSearchText = "queryValue:" + editSearch.getText().toString();//					}//                    //20151227 : 解除 adv search mode//                    if (bundle_adv != null && bundle_adv.size() != 0) {//                        bundle_adv.clear();//解除 adv search mode//                    }////					bundle.clear();//					page = 1;//					ACTION_MESSAGE = WHAT_DID_LOAD_DATA;//					qtItems.clear();//					queryData(ACTION_MESSAGE);//				}*///				return false;//			}//		});	}	public void showActionbar() {		ActionBar mActionBar = getActivity().getActionBar();		if (mActionBar != null && mActionBar.isShowing() == false)			mActionBar.show();	}	private void initPullDownView(View view) {		/*		 * 1.使用PullDownView 2.設置OnPullDownListener 3.從mPullDownView里面獲取ListView		 */		mPullDownView = (PullDownView) view.findViewById(R.id.qtlistview);		if (mPullDownView == null)			return;		mPullDownView.setOnPullDownListener(this);		lstQt = mPullDownView.getListView();		lstQt.setOnItemClickListener(this);		ColorDrawable cd = new ColorDrawable(R.color.list_divider);		lstQt.setDivider(cd);		lstQt.setChoiceMode(ListView.CHOICE_MODE_SINGLE);		lstQt.setDividerHeight(1);		lstQt.setHeaderDividersEnabled(true);		// adapter2 = new		// SimpleAdapter(context,mStrings,R.layout.pulldown_item,new		// String[]{"title","content"},new int[]		// {R.id.msg_title2,R.id.msg_content} );		qtItems = new ArrayList<QtItem>();		adapter2 = new QtListAdapter(context, qtItems);		lstQt.setAdapter(adapter2);		mPullDownView.enableAutoFetchMore(true, 1);	}	private void setQtItems(JSONObject object) throws JSONException {		JSONArray array = object.getJSONArray("data");		navMenuIcons = getResources().obtainTypedArray(R.array.qpqp_list_icons);		int icon;		// 如果回頁數仍是1，則清空舊資料		if (page == 1) {			qtItems.clear();		}		// msgItems = new ArrayList<MsgItem>();		for (int i = 0; i < array.length(); i++) {			JSONObject jsonObject = array.getJSONObject(i);			String qtno = String.format("%s-%s",					                    jsonObject.getString("QT_TYPE"),					                    jsonObject.getString("QT_NO")			                           );			if (jsonObject.getString("CONFIRM_CODE").equals("Y"))				icon = navMenuIcons.getResourceId(0, -1);			else				icon = navMenuIcons.getResourceId(1, -1);			//String status=jsonObject.getString("status");			qtItems.add(new QtItem(qtno,							       jsonObject.getString("CUST_NO"), //jsonObject.getString("customer"),					               icon			                      )			           );		}		// Recycle the typed array		navMenuIcons.recycle();	}	@Override	public void loadData(Object obj) {		try {            JSONObject jsonObject=new JSONObject((String) obj);            if(jsonObject.getString("success").toString().equals("false"))            {                showDialog(jsonObject.getString("remark").toString());                return ;            }//            //-------------------------------------//            //20160105 : 清除畫面資料//            page = 1;//            //ACTION_MESSAGE = WHAT_DID_LOAD_DATA;//            qtItems.clear();//            adapter2.notifyDataSetChanged();//            mPullDownView.notifyDidLoad();//            //-------------------------------------			setQtItems(new JSONObject((String) obj));			if (qtItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidLoad();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	@Override	public void loadMoreData(Object obj) {		try {			setQtItems(new JSONObject((String) obj));			if (qtItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidMore();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	@Override	public void loadRefreshData(Object obj) {		try {			setQtItems(new JSONObject((String) obj));			if (qtItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidRefresh();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	private void queryData(int Message) {		String json = "";		// String		// url="http://59.125.146.7:8080/QTService/GetMsgList?USERID=mis&PAGE="+Integer.toString(page)+"&WWID=13145774WWGlobal999988msg";		String url = super.getWebServiceUrl() + "queryQT";		JSONObject jsonObject = new JSONObject();		JSONObject data = new JSONObject();		try        {			if (this.bundle_adv == null || this.bundle_adv.size() == 0) {                //--------------------                if (bundle.size() == 0) {                    if (strSearchText.length() == 0) {                        data.accumulate("queryValue","");//                        data.accumulate("qtno"    , "");//                        data.accumulate("customer", "");//                        if(strSearchText.length()>0 ){//                    }					else {//						String sKey   = strSearchText.split(":")[0];//						String sValue = strSearchText.split(":")[1];//						data.accumulate(sKey, sValue);						data.accumulate("queryValue",strSearchText.toString());					}                } else {                    Set<String> keys = bundle.keySet();                    for (String key : keys) {                        try {                            data.accumulate(key, bundle.get(key));                        } catch (JSONException e) {                        }                    }                }                //--------------------                //if (editSearch.getText().toString()==""){				//    data.accumulate("qtno", "");				//    data.accumulate("customer", "");                //}                //else{                //                    //                    //}			//	sTmp=this.editSearch.getText().toString().trim();				//data.accumulate("queryValue", this.editSearch.getText().toString().trim());			//	data.accumulate("queryValue", sTmp);			} else {                Iterator iterator = bundle_adv.keySet().iterator();                while (iterator.hasNext()) {                    String key = (String) iterator.next();                    data.accumulate(key, bundle_adv.get(key));                }				//Iterator iterator = this.bundle.keySet().iterator();				//while (iterator.hasNext()) {				//	String key = (String) iterator.next();				//	data.accumulate(key, this.bundle.get(key));				//}			}            jsonObject.accumulate("userid", super.getLoginUser());            jsonObject.accumulate("WWID", "13145774WWGlobal999988QTquery999");            jsonObject.accumulate("data", data);            jsonObject.accumulate("page", Integer.toString(page));			// new HttpPostAsyncTask().execute(url,jsonObject.toString());			super.postRequest(url, jsonObject, Message);			} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		// new HttpGetAsyncTask().execute(url);	}    private void queryData_adv(int Message) {        String json = "";        // String        // url="http://59.125.146.7:8080/QTService/GetMsgList?USERID=mis&PAGE="+Integer.toString(page)+"&WWID=13145774WWGlobal999988msg";        String url = super.getWebServiceUrl() + "queryQT";        JSONObject jsonObject = new JSONObject();        JSONObject data = new JSONObject();        try        {            //if (this.bundle == null || this.bundle.size() == 0) {            //    //data.accumulate("qtno", "");            //    //data.accumulate("customer", "");            //            //    sTmp=this.editSearch.getText().toString().trim();            //    //data.accumulate("queryValue", this.editSearch.getText().toString().trim());            //    data.accumulate("queryValue", sTmp);            //} else {                                Iterator iterator = bundle_adv.keySet().iterator();                while (iterator.hasNext()) {                    String key = (String) iterator.next();                    data.accumulate(key, bundle_adv.get(key));                }            //}            jsonObject.accumulate("userid", super.getLoginUser());            jsonObject.accumulate("WWID", "13145774WWGlobal999988QTquery999");            jsonObject.accumulate("data", data);            jsonObject.accumulate("page", Integer.toString(page));            // new HttpPostAsyncTask().execute(url,jsonObject.toString());            super.postRequest(url, jsonObject, Message);        } catch (JSONException e) {            // TODO Auto-generated catch block            e.printStackTrace();        }        // new HttpGetAsyncTask().execute(url);    }    public void setTitle(CharSequence title) {		getActivity().getActionBar().setTitle(title);	}//	public void callAdvSearch(Bundle b) {////		page = 1;//		ACTION_MESSAGE = WHAT_DID_LOAD_DATA;//		bundle = b;//		queryData(ACTION_MESSAGE);//	}	@Override	/**	 * 按下列表的某一列資料,觸發的action	 */	public void onItemClick(AdapterView<?> parent, View view, int position,			long id) {		// TODO Auto-generated method stub		final QtItem item = (QtItem) qtItems.get(position);		Bundle bundle = new Bundle();		bundle.putString("qtno", item.getQtNo());		//20160111 : 控制變顏色		adapter2.setSelectItem(position);		adapter2.notifyDataSetInvalidated();		// 要跟其他Fragment溝通,需要用getActivity()回到Activity		((MainActivity) getActivity()).callQtDataActivity(bundle);		//callQtDataActivity(bundle);	}	private  void callQtDataActivity(Bundle b)	{		Fragment fragment = null;		if( this.fragmentManager==null) {			this.fragmentManager = getFragmentManager();		}		QtDataActivity activity = new QtDataActivity();		//activity.parent=this;		// disable next statement		activity.setFragmentManager(fragmentManager) ;		fragment = (Fragment) activity;		fragment.setRetainInstance(true);		fragment.setArguments(b);		fragmentManager.beginTransaction()				.add(R.id.content_frame, fragment).commit();		if(fragmentManager.findFragmentByTag("qtlist")!=null) {			activity.parent=fragmentManager.findFragmentByTag("qtlist");			if(fragmentManager.findFragmentByTag("qtlist").getView().getVisibility()==View.VISIBLE) {				fragmentManager.beginTransaction()						.hide(fragmentManager.findFragmentByTag("qtlist"))						.commit();			}		}		fragmentManager.beginTransaction()				.show(fragment)				.commit();	}	@Override	public void onRefresh() {		// TODO Auto-generated method stub		// 執行緒		new Thread(new Runnable() {			@Override			public void run() {				String result = "";				ACTION_MESSAGE = WHAT_DID_REFRESH;				queryData(ACTION_MESSAGE);			}		}).start();	}	@Override	public void onMore() {		// TODO Auto-generated method stub		// Runnable =>被處理的事件		// Handler =>處理器		new Thread(new Runnable() {			@Override			public void run() {// 需要背景作的事 //進入點				String result = "";				page += 1;				ACTION_MESSAGE = WHAT_DID_MORE;				queryData(ACTION_MESSAGE);			}		}).start();	}	private void openDialog(Fragment fragment, String tagName) {		// Fragment fragment= new CustListActivity();		FragmentManager fragmentManager = getFragmentManager();		fragmentManager.beginTransaction()				.hide(fragmentManager.findFragmentById(this.getId())).commit();		fragmentManager.beginTransaction()				.add(R.id.content_frame, fragment, tagName).commit();		fragmentManager.beginTransaction().addToBackStack(null);		fragmentManager.beginTransaction().show(fragment).commit();	}	//------------------------------------------------------------------------- */	// 下面是 QT Function Beg                                                                         */	//------------------------------------------------------------------------- */	public void createQT(View view) {		FragmentManager fragmentManager = getFragmentManager();		QtAddActivity activity=new QtAddActivity();		activity.setParent(this);		activity.setCallback(new ICallback() {			@Override			public void doWork(Object obj) {				try {					//remove qtadd					getFragmentManager().beginTransaction().remove(							getFragmentManager().findFragmentByTag("qtadd")).commit();					JSONObject jsonObject = new JSONObject((String) obj);					if (jsonObject.getString("success").equals("false")) {						//showDialog("error",jsonObject.getString("remark"));					}					else {//成功						JSONObject data=jsonObject.getJSONObject("data");						Bundle bundle = new Bundle();						bundle.putString("qtno", data.getString("QT_TYPE")+"-"+data.getString("QT_NO"));						bundle.putString("func", "newQT1");						//call qtdata						//((MainActivity)getActivity()).callQtDataActivity(bundle);//						callQtDataActivity(bundle);//						// TODO Auto-generated method stub//						final QtItem item = (QtItem) qtItems.get(position);//						Bundle bundle = new Bundle();//						bundle.putString("qtno", item.getQtNo());////						//20160111 : 控制變顏色//						adapter2.setSelectItem(position);//						adapter2.notifyDataSetInvalidated();						// 要跟其他Fragment溝通,需要用getActivity()回到Activity						((MainActivity) getActivity()).callQtDataActivity(bundle);						//callQtDataActivity(bundle);					}					// showApplicationDialog(mView);				} catch (JSONException e) {					// TODO Auto-generated catch block					e.printStackTrace();				}			}		});		activity.setFragmentManager(fragmentManager);		Fragment fragment = activity;		fragmentManager.beginTransaction()				.add(R.id.content_frame, fragment, "qtadd").commit();		/*fragmentManager.beginTransaction()					.add(fragment,  "qtadd").commit();*/		fragmentManager.beginTransaction().hide(fragmentManager.findFragmentById(this.getId())).commit();		fragmentManager.beginTransaction().show(fragment).commit();		//fragmentManager.beginTransaction()	//			.replace(R.id.content_frame, fragment,  "qtadd").commit();		// hideActionbar();	}//	public void callQtDataActivity(Bundle bundle) {//		ApqpDataActivity activity = new ApqpDataActivity();//		activity.parent = this;//		if (this.fragmentManager == null) {//			this.fragmentManager = getFragmentManager();//		}//		activity.fragmentManager = this.fragmentManager;//		/*Bundle b = new Bundle();//		b.putInt("frg_id", this.getId());//		b.putString("return_title","WIP");//		b.putString("apqpno", content);*///		activity.setArguments(bundle);//		activity.setParent(this);//		if (this.fragmentManager.findFragmentById(activity.getId()) == null) {//			this.fragmentManager.beginTransaction()//					.add(R.id.content_frame, activity, "qtdata").commit();//		}//		this.fragmentManager.beginTransaction().hide(this).commit();//		this.fragmentManager.beginTransaction().show(activity).commit();////	}//}