package com.winway.wwapp2;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Set;import org.apache.http.HttpResponse;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.entity.StringEntity;import org.apache.http.impl.client.DefaultHttpClient;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.R.string;import android.app.ActionBar;import android.app.Fragment;import android.app.FragmentManager;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.res.TypedArray;import android.graphics.Color;import android.graphics.drawable.ColorDrawable;import android.os.AsyncTask;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.text.InputType;import android.util.Log;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.view.View.OnFocusChangeListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.inputmethod.InputMethodManager;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import android.widget.SimpleAdapter;import android.widget.AdapterView.OnItemClickListener;import com.winway.wwapp2.PullDownView.OnPullDownListener;/** * apqp列表的Fragment *  * @author *  */public class ApqpListActivity extends BaseFragment implements		OnPullDownListener, OnItemClickListener {	private ListView lstApqp;	// private SimpleAdapter adapter2;	private ApqpListAdapter adapter2;	private TypedArray navMenuIcons;	private TypedArray navMenuIcons2;	private ArrayList<ApqpItem> apqpItems;	private Context context;	private PullDownView mPullDownView;	private List<Map<String, String>> mStrings = new ArrayList<Map<String, String>>();	protected static final int REFRESH_DATA = 0x00000002;	private static final int WHAT_DID_LOAD_DATA = 0;	private static final int WHAT_DID_REFRESH = 1;	private static final int WHAT_DID_MORE = 5;	private int ACTION_MESSAGE;	private int page = 1;	private Bundle bundle;	private EditText editSearch;	private Button btnAdvSearch;	private Button btnCancel;	private String strSearchText = "";	private RelativeLayout r1;	private RelativeLayout r2;	private RelativeLayout r3;	private RadioGroup radioGroup;	private RadioButton tabApqp;	private RadioButton tabCust;	// C	private void closeFragment() {		if (this.parent != null) {			this.fragmentManager.beginTransaction().remove(this).commit();			this.fragmentManager.beginTransaction().show(this.parent).commit();		}		else {			((MainActivity)getActivity()).selectItem(1);		}	}	//	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		return initView(inflater, container);	}	/**	 * 初始化APQP列表 Screenshot_20150410_13.jpg	 * 	 * @param inflater	 * @param container	 * @return	 */	private View initView(LayoutInflater inflater, ViewGroup container) {		View view = inflater.inflate(R.layout.actapqplist, container, false);		context = view.getContext();		// View view2 = inflater.inflate(R.layout.pulldown, container, false);		initPullDownView(view);		initUI(view);		ACTION_MESSAGE = WHAT_DID_LOAD_DATA;		page = 1;		if (this.getArguments() != null) {			bundle = this.getArguments();		}		if (apqpItems.size() == 0 && bundle == null) {			bundle = new Bundle();		}		queryData(WHAT_DID_LOAD_DATA);		return view;	}	/**	 * 顯示Apqp進階查詢視窗	 */	public void showAdvDialog() {		FragmentManager fragmentManager = getFragmentManager();		ApqpAdvSearchActivity activity = new ApqpAdvSearchActivity();		activity.setParent(this);		Fragment fragment = (Fragment) activity;		fragment.setRetainInstance(true);		if (fragmentManager.findFragmentById(fragment.getId()) == null) {			fragmentManager.beginTransaction()					.add(R.id.content_frame, fragment, "act_apqp_adv_search")					.commit();		}		fragmentManager.beginTransaction().hide(this).commit();		fragmentManager.beginTransaction().show(fragment).commit();	}	private void initUI(View view) {		final Button btnReturnSale = (Button) view				.findViewById(R.id.btnReturnSale);		if (btnReturnSale != null) {			if (this.getArguments() != null) {				btnReturnSale.setText("Back");			}			btnReturnSale.setOnClickListener(new OnClickListener() {				@Override				public void onClick(View v) {					if (btnReturnSale.getText().equals("Back")) {						closeFragment();					} else {						((MainActivity) getActivity()).returnSale(v);					}				}			});		}		this.editSearch = ((EditText) view.findViewById(R.id.search_text));		this.r1 = ((RelativeLayout) view.findViewById(R.id.cust_r1));		this.r2 = ((RelativeLayout) view.findViewById(R.id.cust_r2));		this.r3 = ((RelativeLayout) view.findViewById(R.id.cust_r3));		this.radioGroup = (RadioGroup) view.findViewById(R.id.radiogroup1);		this.btnAdvSearch = (Button) view.findViewById(R.id.btn_adv_search);		this.btnAdvSearch.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				showAdvDialog();// 顯示Apqp進階查詢視窗			}		});		this.btnCancel = (Button) view.findViewById(R.id.btn_cancel);		this.tabApqp = (RadioButton) view.findViewById(R.id.tabApqp);		this.tabCust = (RadioButton) view.findViewById(R.id.tabCust);		tabApqp.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				tabApqp.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.red));				tabCust.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.white));			}		});		tabCust.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				tabApqp.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.white));				tabCust.setTextColor(getActivity().getApplication()						.getResources().getColor(R.color.red));			}		});		btnCancel.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				strSearchText = "";				if (btnAdvSearch.getVisibility() != View.VISIBLE) {					btnAdvSearch.setVisibility(View.VISIBLE);				}				if (btnCancel.getVisibility() == View.VISIBLE) {					btnCancel.setVisibility(View.GONE);				}				if (r3.getVisibility() == View.VISIBLE) {					r3.setVisibility(View.GONE);				}				if (r1.getVisibility() != View.VISIBLE) {					r1.setVisibility(View.VISIBLE);				}			}		});		editSearch.clearFocus();		// set Search Edit On Click Event		this.editSearch.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View view) {				// ((MainActivity)getActivity()).hideActionbar();			}		});		// set Search Edit OnTouch Event		this.editSearch.setOnTouchListener(new OnTouchListener() {			@Override			public boolean onTouch(View view, MotionEvent event) {				// editSearch.setInputType(InputType.TYPE_NULL); // 關閉軟鍵盤				return false;			}		});		// set Search Edit Focus Event		this.editSearch.setOnFocusChangeListener(new OnFocusChangeListener() {			@Override			public void onFocusChange(View v, boolean hasFocus) {				if (hasFocus) {					// InputMethodManager imm = (InputMethodManager)					// getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);					// imm.hideSoftInputFromWindow(editSearch.getWindowToken(),					// 0);					// ((MainActivity)getActivity()).hideActionbar();					if (btnAdvSearch.getVisibility() == View.VISIBLE) {						btnAdvSearch.setVisibility(View.GONE);					}					if (btnCancel.getVisibility() != View.VISIBLE) {						btnCancel.setVisibility(View.VISIBLE);					}					if (r3.getVisibility() != View.VISIBLE) {						r3.setVisibility(View.VISIBLE);					}					if (r1.getVisibility() == View.VISIBLE) {						r1.setVisibility(View.GONE);					}				}			}		});		this.editSearch.setOnKeyListener(new OnKeyListener() {			@Override			public boolean onKey(View view, int args, KeyEvent keyEvent) {				if ((keyEvent.getAction() == 0) && (args == 66)) {					int rid = radioGroup.getCheckedRadioButtonId();					if (rid == R.id.tabApqp) {						strSearchText = "apqpno:"								+ editSearch.getText().toString();					} else {						strSearchText = "customer:"								+ editSearch.getText().toString();					}					bundle.clear();					page = 1;					ACTION_MESSAGE = WHAT_DID_LOAD_DATA;					apqpItems.clear();					queryData(ACTION_MESSAGE);				}				return false;			}		});	}	public void showActionbar() {		ActionBar mActionBar = getActivity().getActionBar();		if (mActionBar != null && mActionBar.isShowing() == false)			mActionBar.show();	}	private void initPullDownView(View view) {		/*		 * 1.使用PullDownView 2.設置OnPullDownListener 3.從mPullDownView里面獲取ListView		 */		mPullDownView = (PullDownView) view.findViewById(R.id.apqplistview);		if (mPullDownView == null)			return;		mPullDownView.setOnPullDownListener(this);		lstApqp = mPullDownView.getListView();		lstApqp.setOnItemClickListener(this);		ColorDrawable cd = new ColorDrawable(getResources().getColor(R.color.list_divider));		lstApqp.setDivider(cd);		lstApqp.setChoiceMode(ListView.CHOICE_MODE_SINGLE);		lstApqp.setDividerHeight(1);		lstApqp.setHeaderDividersEnabled(true);		// adapter2 = new		// SimpleAdapter(context,mStrings,R.layout.pulldown_item,new		// String[]{"title","content"},new int[]		// {R.id.msg_title2,R.id.msg_content} );		apqpItems = new ArrayList<ApqpItem>();		adapter2 = new ApqpListAdapter(context, apqpItems);		lstApqp.setAdapter(adapter2);		mPullDownView.enableAutoFetchMore(true, 1);	}	private void setApqpItems(JSONObject object) throws JSONException {		JSONArray array = object.getJSONArray("data");		navMenuIcons = getResources().obtainTypedArray(R.array.qpqp_list_icons);		int icon;		// 如果回傳資料大於零，而且頁數仍是1，則清空舊資料		if (array.length() > 0 && page == 1) {			apqpItems.clear();		}		// msgItems = new ArrayList<MsgItem>();		for (int i = 0; i < array.length(); i++) {			JSONObject jsonObject = array.getJSONObject(i);			String apqpno = String.format("%s-%s",					jsonObject.getString("xa001"),					jsonObject.getString("xa002"));			if (jsonObject.getString("xa068").equals("Y"))				icon = navMenuIcons.getResourceId(0, -1);			else				icon = navMenuIcons.getResourceId(1, -1);			String status=jsonObject.getString("status");			apqpItems.add(new ApqpItem(apqpno,					jsonObject.getString("customer"), icon,status,jsonObject.getString("xa593")));		}		// Recycle the typed array		navMenuIcons.recycle();	}	@Override	public void loadData(Object obj) {		try {			setApqpItems(new JSONObject((String) obj));			if (apqpItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidLoad();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	@Override	public void loadMoreData(Object obj) {		try {			setApqpItems(new JSONObject((String) obj));			if (apqpItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidMore();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	@Override	public void loadRefreshData(Object obj) {		try {			setApqpItems(new JSONObject((String) obj));			if (apqpItems.size() == 0 && page > 1)				page--;			adapter2.notifyDataSetChanged();			mPullDownView.notifyDidRefresh();		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();			// Toast.makeText(NavbarHomeActivity.this,"recevie erroe:"+e.toString(),			// Toast.LENGTH_SHORT).show();		}	}	private void queryData(int Message) {		String json = "";		// String		// url="http://59.125.146.7:8080/APQPService/GetMsgList?USERID=mis&PAGE="+Integer.toString(page)+"&WWID=13145774WWGlobal999988msg";		String url = super.getWebServiceUrl() + "queryAPQP";		JSONObject jsonObject = new JSONObject();		JSONObject data = new JSONObject();		try {			if (bundle.size() == 0) {				if (strSearchText.length() == 0) {					data.accumulate("apqpno", "");					data.accumulate("customer", "");				} else {					String sKey = strSearchText.split(":")[0];					String sValue = strSearchText.split(":")[1];					data.accumulate(sKey, sValue);				}			} else {				Set<String> keys = bundle.keySet();				for (String key : keys) {					try {						data.accumulate(key, bundle.get(key));					} catch (JSONException e) {					}				}			}			jsonObject.accumulate("userid", super.getLoginUser());			jsonObject.accumulate("WWID", "13145774WWGlobal999988apqpquery999");			jsonObject.accumulate("data", data);			jsonObject.accumulate("page", Integer.toString(page));			// new HttpPostAsyncTask().execute(url,jsonObject.toString());			super.postRequest(url, jsonObject, Message);		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		// new HttpGetAsyncTask().execute(url);	}	public void setTitle(CharSequence title) {		getActivity().getActionBar().setTitle(title);	}	public void callAdvSearch(Bundle b) {		page = 1;		ACTION_MESSAGE = WHAT_DID_LOAD_DATA;		bundle = b;		queryData(ACTION_MESSAGE);	}	@Override	/**	 * 按下列表的某一列資料,觸發的action	 */	public void onItemClick(AdapterView<?> parent, View view, int position,			long id) {		// TODO Auto-generated method stub		final ApqpItem item = (ApqpItem) apqpItems.get(position);		Bundle bundle = new Bundle();		bundle.putString("apqpno", item.getApqpNo());		adapter2.setSelectItem(position);		adapter2.notifyDataSetInvalidated();		// 要跟其他Fragment溝通,需要用getActivity()回到Activity		((MainActivity) getActivity()).callApqpDataActivity(bundle);	}	@Override	public void onRefresh() {		// TODO Auto-generated method stub		// 執行緒		new Thread(new Runnable() {			@Override			public void run() {    			String result = "";				ACTION_MESSAGE = WHAT_DID_REFRESH;				queryData(ACTION_MESSAGE);			}		}).start();	}	@Override	public void onMore() {		// TODO Auto-generated method stub		// Runnable =>被處理的事件		// Handler =>處理器		new Thread(new Runnable() {			@Override			public void run() {// 需要背景作的事 //進入點				String result = "";				page += 1;				ACTION_MESSAGE = WHAT_DID_MORE;				queryData(ACTION_MESSAGE);			}		}).start();	}}