package com.winway.wwapp2;import android.app.Fragment;import android.app.FragmentManager;import android.content.Context;import android.os.Bundle;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.View.OnFocusChangeListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import android.widget.RelativeLayout;import com.winway.wwapp2.PullDownView.OnPullDownListener;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;public class ContactListActivity3 extends BaseFragment implements OnPullDownListener, OnItemClickListener {	private Context context ;	private Bundle bundle;	private View mView=null;	private int ACTION_MESSAGE;	private ContactListAdapter3 adapter2;	private ArrayList<ContactItem3> contactItems;	private PullDownView mPullDownView;	protected static final int REFRESH_DATA = 0x00000002;	private static final int WHAT_DID_LOAD_DATA = 0;	private static final int WHAT_DID_REFRESH = 1;	private static final int WHAT_DID_MORE = 5;	private Button btnCancel=null;	private Button btnCancel2=null;	private String strSearchText="";	private EditText searchEdit;	private RelativeLayout r1,r2;	private int page=1;	private ListView lstContact;	private String oce01="";	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {		return initView(inflater, container);	}	private View initView(LayoutInflater inflater, ViewGroup container) {		View view = inflater.inflate(R.layout.actcontactlist3, container, false);		context = view.getContext();		bundle =this.getArguments();        oce01=bundle.getString("cust_no");        btnCancel=(Button) view.findViewById(R.id.btn_cancel);		if(btnCancel!=null){			btnCancel.setOnClickListener(new OnClickListener() {		         public void onClick(View v) {                    closeFragment();			        }			    });		}		btnCancel2=(Button)view.findViewById(R.id.btn_contact_cancel);		r1=(RelativeLayout)view.findViewById(R.id.contact_r1);		r2=(RelativeLayout)view.findViewById(R.id.contact_r2);		searchEdit=(EditText)view.findViewById(R.id.contact_search_text);		btnCancel2.setOnClickListener(new OnClickListener(){			@Override			public void onClick(View v){				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());				//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());				if(r1.getVisibility()!=View.VISIBLE)				{					r1.setVisibility(View.VISIBLE);				}				if(btnCancel2.getVisibility()==View.VISIBLE)				{					btnCancel2.setVisibility(View.GONE);					searchEdit.setFocusable(false);					searchEdit.setFocusableInTouchMode(false);					searchEdit.setClickable(false);				}			}		});		searchEdit.setOnClickListener(new OnClickListener(){			@Override			public void onClick(View v){		   						if(btnCancel2.getVisibility()!=View.VISIBLE)				{					btnCancel2.setVisibility(View.VISIBLE);					}				if(r1.getVisibility()==View.VISIBLE)				{					r1.setVisibility(View.GONE);									}			}		});		searchEdit.setOnTouchListener(new OnTouchListener() {		    @Override		    public boolean onTouch(View v, MotionEvent event) {               if (event.getAction() == MotionEvent.ACTION_UP) {		            		        }		        return false;		    }		});		searchEdit.setOnFocusChangeListener(new OnFocusChangeListener() {		    @Override		    public void onFocusChange(View v, boolean hasFocus) {		        if (hasFocus) {		        	if(btnCancel2.getVisibility()!=View.VISIBLE)					{						btnCancel2.setVisibility(View.VISIBLE);						}					if(r1.getVisibility()==View.VISIBLE)					{						r1.setVisibility(View.GONE);										}		        } else {		           		        }		    }		});		searchEdit.setOnKeyListener(new OnKeyListener() {		    public boolean onKey(View v, int keyCode, KeyEvent event) {		    			    	//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());				//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 		   				        // If the event is a key-down event on the "enter" button		    	if ((event.getAction() == 0) && (keyCode== 66))				{		          // Perform action on key press		        	page=1;			        strSearchText=searchEdit.getText().toString();			    	queryData(WHAT_DID_LOAD_DATA);		        // return true;		        }		        return false;		    }		});		initPullDownView(view);		queryData(WHAT_DID_LOAD_DATA); 		return view;	}	//得到聯絡人的資料(from webservice)	private void queryData(int Message)	{	  				 String json="";				   //  String url="http://59.125.146.7:8080/APQPService/GetMsgList?USERID=mis&PAGE="+Integer.toString(page)+"&WWID=13145774WWGlobal999988msg";			 String url="http://59.125.146.7:8080/APQPService/openWindow1Contact";		     JSONObject jsonObject = new JSONObject();		     JSONObject data=new JSONObject();	         try {	        	   data.accumulate("condition", strSearchText);	        	   data.accumulate("conditionContactOCE01", oce01);				   jsonObject.accumulate("userid","mis");				   jsonObject.accumulate("WWID", "13145774WWGlobal999988owquery999");				   jsonObject.accumulate("data", data);				   jsonObject.accumulate("page", page);				   super.postRequest(url, jsonObject, Message);				   			} catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}			}	@Override	  public void loadData(Object result)	  {				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());    				try {			JSONObject jsonObject=new JSONObject((String)result);			contactItems.clear();			setContactItem(jsonObject);			mPullDownView.notifyDidLoad();			}		catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}			  	  }	@Override	  public void loadRefreshData(Object result)	  {		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());    				try {			JSONObject jsonObject=new JSONObject((String)result);			contactItems.clear();			setContactItem(jsonObject);			page=1;			mPullDownView.notifyDidRefresh();			}		catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}			  	  }			//載入更多資料	@Override	  public void loadMoreData(Object result)	  {		//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());    					try {				JSONObject jsonObject=new JSONObject((String)result);				setContactItem(jsonObject);				JSONArray array=jsonObject.getJSONArray("data");				if(array.length()==0){					page=page-1;						}				mPullDownView.notifyDidMore();				}			catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}			  	  }			private void setContactItem(JSONObject jsonObject)	{				//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());    				try {			JSONArray array=jsonObject.getJSONArray("data");			if(array.length()>0){			for(int i=0;i<array.length() ;i++){				JSONObject obj;				obj = array.getJSONObject(i);					contactItems.add(new ContactItem3(obj.getString("ta_oce01"),						                         obj.getString("ta_oce02"),						                         obj.getString("oce07"),						                         obj.getString("oce05")						                         ));			      }			adapter2.notifyDataSetChanged();			}		   } catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}			}	  @Override		public void onRefresh() {		  		  //System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());		  //System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 	   					// TODO Auto-generated method stub	new Thread(new Runnable() {				@Override				public void run() {										//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());					//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 			   							//String result="";									queryData(WHAT_DID_REFRESH);    									}			}).start();		}		@Override		public void onMore() {						//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());			//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 	   					// TODO Auto-generated method stub	new Thread(new Runnable() {						@Override				public void run() {										//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());					//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 			   							//String result="";					page+=1;					queryData(WHAT_DID_MORE);    			      	     									}			}).start();					}				//初始化下拉載入更多資料		private void initPullDownView(View view)		{						//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());			//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 	   					/*			 * 1.使用PullDownView			 * 2.設置OnPullDownListener			 * 3.從mPullDownView里面獲取ListView			 */					mPullDownView = (PullDownView) view.findViewById(R.id.contactlistview);			if(mPullDownView==null) return ;			mPullDownView.setOnPullDownListener(this);			lstContact = mPullDownView.getListView();					lstContact.setOnItemClickListener(this);			/*ColorDrawable cd=new ColorDrawable(R.color.red);			lstContact.setDivider(cd);			lstContact.setChoiceMode(ListView.CHOICE_MODE_SINGLE);*/			lstContact.setDividerHeight(0);			lstContact.setHeaderDividersEnabled(true);			//adapter2 = new SimpleAdapter(context,mStrings,R.layout.pulldown_item,new String[]{"title","content"},new int[] {R.id.msg_title2,R.id.msg_content} );		     contactItems = new ArrayList<ContactItem3>();			 adapter2 = new ContactListAdapter3(context,contactItems);			 lstContact.setAdapter(adapter2);		     mPullDownView.enableAutoFetchMore(true, 1);					}		@Override		public void onItemClick(AdapterView<?> parent, View view, int position,				long id) {						//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());			//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber());             //20151221 : daniel			Bundle args;			args = this.getArguments();			final ContactItem3 item = (ContactItem3 ) contactItems.get(position);			if (args.getString("parentId")=="qtdata") {				FragmentManager fm = getFragmentManager();				Fragment fraagment = fm.findFragmentByTag("qtdata");				EditText CUST_CONTACT = (EditText) fraagment.getView().findViewById(R.id.ed_CUST_CONTACT);			  //EditText TEL_NO       = (EditText) fraagment.getView().findViewById(R.id.ed_TEL_NO); //Phone num			  //EditText xa008 = (EditText) fraagment.getView().findViewById(R.id.xa008); //Mobile			  //EditText xa010 = (EditText) fraagment.getView().findViewById(R.id.xa010);//Email				CUST_CONTACT.setText(item.getName());			  //TEL_NO      .setText(item.getExt()); //ext			  //xa008.setText(item.getCellphone()); //Mobile			  //xa010.setText(item.getEmail());//Email			}			else {				FragmentManager fm = getFragmentManager();				Fragment fraagment = fm.findFragmentByTag("apqpdata");				EditText xa005 = (EditText) fraagment.getView().findViewById(R.id.xa005);				EditText xa502 = (EditText) fraagment.getView().findViewById(R.id.xa502); //Phone num				EditText xa008 = (EditText) fraagment.getView().findViewById(R.id.xa008); //Mobile				EditText xa010 = (EditText) fraagment.getView().findViewById(R.id.xa010);//Email				xa005.setText(item.getName());				xa502.setText(item.getExt()); //ext				xa008.setText(item.getCellphone()); //Mobile				xa010.setText(item.getEmail());//Email			}			   closeFragment();			   // Bundle bundle = new Bundle();				//bundle.putString("xa517", item.getEmpNo());			    //((MainActivity) getActivity()).callApqpDataActivity(bundle);					}		private void closeFragment()		{			//System.out.println("==>"+new Throwable().getStackTrace()[0].getClassName()+" > "+new Throwable().getStackTrace()[0].getMethodName());			//System.out.println("===>Line number: "+new Throwable().getStackTrace()[0].getLineNumber()); 			Bundle args;			args = this.getArguments();			FragmentManager fm=getFragmentManager();        	 fm.beginTransaction().remove(fm.findFragmentByTag("Contact")).commit();        	 fm.popBackStack();            if (args.getString("parentId")=="qtdata") {				fm.beginTransaction().show(fm.findFragmentByTag("qtdata")).commit();			 }			else {				fm.beginTransaction().show(fm.findFragmentByTag("apqpdata")).commit();			}					}}